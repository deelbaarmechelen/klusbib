{
  "name": "klusbib",
  "private": true,
  "version": "0.0.1",
  "description": "A tool library",
  "engines": {
    "npm": "6.x",
    "node": "14.x",
    "yarn": "1.x"
  },
  "repository": "https://github.com/deelbaarmechelen/klusbib",
  "license": "AGPLv3",
  "dependencies": {
    "@bower_components/google-maps-utility-library-v3-infobox": "nmccready/google-maps-utility-library-v3-infobox#^1.1.14",
    "@bower_components/google-maps-utility-library-v3-keydragzoom": "nmccready/google-maps-utility-library-v3-keydragzoom#^2.0.9",
    "@bower_components/google-maps-utility-library-v3-markerwithlabel": "nmccready/google-maps-utility-library-v3-markerwithlabel#^1.1.10*",
    "@bower_components/lodash": "lodash/lodash#^4.17.4",
    "@mollie/api-client": "2.2.0",
    "angular": "^1.8.0",
    "angular-animate": "^1.7.8",
    "angular-base64": "^2.0.5",
    "angular-bootstrap": "^0.12.2",
    "angular-bootstrap-affix": "^0.2.4",
    "angular-bootstrap-calendar": "^1.0.0",
    "angular-bootstrap-colorpicker": "^3.0.32",
    "angular-css": "^1.0.8",
    "angular-flash-alert": "^2.4.0",
    "angular-google-maps": "^2.4.1",
    "angular-jwt": "^0.1.11",
    "angular-loading-bar": "^0.9.0",
    "angular-moment": "^1.3.0",
    "angular-resource": "^1.7.8",
    "angular-simple-logger": "^0.1.7",
    "angular-ui-router": "^1.0.22",
    "font-awesome": "^4.6.3",
    "http-server": "^0.11.1",
    "interact": "^0.0.3",
    "js-rich-marker": "^1.1.2",
    "lodash": "^4.17.19",
    "magnific-popup": "^1.1.0",
    "markerclustererplus": "^2.1.4",
    "moment": "2.24.0",
    "ng-droplet": "^0.7.1",
    "ng-file-upload": "^12.2.13",
    "ngstorage": "^0.3.11",
    "oclazyload": "^1.1.0",
    "scrollreveal": "4.0.5",
    "ui-leaflet": "^1.0.3"
  },
  "devDependencies": {
    "angular-mocks": "^1.7.8",
    "babel-core": "6.26.3",
    "babel-loader": "7.1.4",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "babel-preset-es2015": "^6.24.1",
    "clean-webpack-plugin": "1.0.1",
    "copy-webpack-plugin": "4.6.0",
    "cross-var": "^1.1.0",
    "css-loader": "2.1.1",
    "cypress": "6.8.0",
    "db-migrate": "^0.11.12",
    "dotenv": "^8.2.0",
    "file-loader": "3.0.1",
    "gulp-clean-css": "3.10.0",
    "gulp-header": "2.0.7",
    "gulp-less": "4.0.1",
    "gulp-rename": "1.4.0",
    "gulp-uglify": "3.0.2",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.2.0",
    "jasmine-core": "3.4.0",
    "karma": "^4.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-firefox-launcher": "^1.1.0",
    "karma-jasmine": "^1.1.2",
    "karma-junit-reporter": "^1.2.0",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-spec-reporter": "^0.0.32",
    "karma-webpack": "^4.0.2",
    "mini-css-extract-plugin": "^0.5.0",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "protractor": "^5.4.2",
    "raw-loader": "1.0.0",
    "run-script-os": "^1.1.4",
    "style-loader": "0.23.1",
    "uglifyjs-webpack-plugin": "^2.1.2",
    "webpack": "^4.30.0",
    "webpack-bundle-analyzer": "^3.3.2",
    "webpack-cli": "^3.3.1",
    "webpack-dev-server": "^3.3.1",
    "webpack-merge": "^4.2.1"
  },
  "scripts": {
    "update-deps": "yarn install",
    "build": "node --max-old-space-size=512 ./node_modules/webpack/bin/webpack.js -p --config webpack.prod.js",
    "prepublish": "yarn build",
    "start": "http-server -p 5000 -c-1 dist",
    "start-dev": "webpack-dev-server --open --config webpack.dev.js",
    "start-prod": "webpack-dev-server --open --config webpack.prod.js",
    "pretest": "yarn install --production=false",
    "test": "./node_modules/.bin/karma start --single-run --browsers PhantomJS",
    "test-single-run": "karma start karma.conf.js --single-run",
    "analyze": "./node_modules/.bin/webpack -p  --json --progress --profile > webpack-build-log.json && ./node_modules/.bin/webpack-bundle-analyzer webpack-build-log.json dist",
    "preupdate-webdriver": "yarn install",
    "update-webdriver": "webdriver-manager update",
    "preprotractor": "yarn run update-webdriver",
    "protractor": "protractor e2e-tests/protractor.conf.js",
    "cypress:open": "cypress open",
    "db:api:test:reset": "ssh cypress.klusbib run testapi vendor/bin/phinx seed:run -s DatabaseResetSeeder -s ProjectsTableSeeder -s UsersTableSeeder -e dev",
    "db:inventory:test:reset": "ssh cypress.klusbib run testinventory php artisan --force module:seed Klusbib",
    "db:reset": "run-script-os",
    "db:reset:windows": "dotenv -- cross-var %API_PATH%\\vendor\\bin\\phinx rollback --configuration %API_PATH%\\phinx.php -e dev -t 0 && dotenv -- cross-var %API_PATH%\\vendor\\bin\\phinx seed:run --configuration %API_PATH%\\phinx.php -s DatabaseResetSeeder -e dev",
    "db:migrate": "run-script-os",
    "db:migrate:windows": "dotenv -- cross-var %API_PATH%\\vendor\\bin\\phinx migrate --configuration %API_PATH%\\phinx.php -e dev && dotenv -- cross-var %API_PATH%\\vendor\\bin\\phinx seed:run --configuration %API_PATH%\\phinx.php -s ProjectsTableSeeder -e dev",
    "db:seed": "run-script-os",
    "db:seed:windows": "dotenv -- cross-var %API_PATH%\\vendor\\bin\\phinx seed:run --configuration %API_PATH%\\phinx.php -s UsersTableSeeder -e dev",
    "db:seed:default": "dotenv -- cross-var %API_PATH%/vendor/bin/phinx seed:run --configuration %API_PATH%/phinx.php -s UsersTableSeeder -e dev",
    "db:seed:reset": "run-script-os",
    "db:seed:reset:windows": "dotenv -- cross-var %API_PATH%\\vendor\\bin\\phinx seed:run --configuration %API_PATH%\\phinx.php -s DatabaseResetSeeder -s ProjectsTableSeeder -s UsersTableSeeder -e dev",
    "db:seed:reset:default": "dotenv -- cross-var %API_PATH%/vendor/bin/phinx seed:run --configuration %API_PATH%/phinx.php -s DatabaseResetSeeder -s ProjectsTableSeeder -s UsersTableSeeder -e dev",
    "update-index-async": "node -e \"var fs=require('fs'),indexFile='app/index-async.html',loaderFile='app/node_modules/@bower_components/angular-loader/angular-loader.min.js',loaderText=fs.readFileSync(loaderFile,'utf-8').split(/sourceMappingURL=angular-loader.min.js.map/).join('sourceMappingURL=node_modules/@bower_components/angular-loader/angular-loader.min.js.map'),indexText=fs.readFileSync(indexFile,'utf-8').split(/\\/\\/@@NG_LOADER_START@@[\\s\\S]*\\/\\/@@NG_LOADER_END@@/).join('//@@NG_LOADER_START@@\\n'+loaderText+'    //@@NG_LOADER_END@@');fs.writeFileSync(indexFile,indexText);\""
  }
}
